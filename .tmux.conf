# Inspired from: https://github.com/nicknisi/dotfiles/tree/master/tmux

# set is an alias for set-option
# setw is an alias for set-window-option

################## COLORS ##################
# Colors: https://i.stack.imgur.com/e63et.png
tm_color_active=colour208
tm_color_inactive=colour241
tm_color_neutral=colour255

################## GENERAL OPTIONS ##################
# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Sssh
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# Update status bar every 20 Seconds
set-option -g status-interval 20

# Number of lines of history to remember
set-option -g history-limit 100000

# default is black
set-option -g status-bg default
set-option -g status-fg $tm_color_neutral
set-option -g status-right-attr bold

# Pane border
set-option -g pane-border-fg $tm_color_inactive
set-option -g pane-active-border-fg $tm_color_active

# Pane number display
set-option -g display-panes-active-colour $tm_color_active
set-option -g display-panes-colour $tm_color_inactive

# vim mode for keys (i for insert, esc, etc)
set-window-option -g mode-keys vi

# The window (GUI) title of the terminal will be based on the curent tmux window
set-option -g set-titles on
set-option -g set-titles-string "#T - #W"

# No delay for ESC key
set-option -sg escape-time 0

# Window titles
set-window-option -g window-status-attr none
set-window-option -g window-status-current-attr bold,underscore
set-window-option -g window-status-current-fg $tm_color_active
# #I: number; #W name
set-window-option -g  window-status-format "#I #W"
set-window-option -g  window-status-current-format "#I #W"

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

################## BINDINGS ##################
bind [ copy-mode
bind Escape copy-mode
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi y send -X copy-pipe 'xclip -in -selection clipboard' \; display-message "copied to system clipboard"
bind -Tcopy-mode-vi C-v send -X rectangle-toggle
bind ] paste-buffer
# Open new panes/windows in the same directory
bind '-' split-window -c "#{pane_current_path}"
bind '|' split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use v to trigger selection    
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Use y to yank current selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# ctrl-b, hold ctrl and k+
# -r gives 500ms to press the key again
bind -r C-k resize-pane -U
bind -r C-j resize-pane -D
bind -r C-h resize-pane -L
bind -r C-l resize-pane -R

# Bind : to command-prompt like vim.  This is the default in tmux already.
bind : command-prompt

################## LEFT STATUS BAR - TMUX SESSION #######################
# Diplay session name
set-option -g status-left " #[fg=colour200][#S] "

################## RIGHT STATUS BAR - EXTERNAL CONTENT ##################
tm_separator="#[fg=colour236]|"
tm_time='#[fg=colour166]%a %h-%d %H:%M:%S'
tm_battery="#[fg=colour200]Battery:#(acpi | awk -F, '{ print $2 $3 }')"

set-option -g status-right ' '$tm_battery'  '$tm_separator' '$tm_time' '

################## PACKAGE MANAGER #################################
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'

set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.tmux/plugins/tpm/tpm'
